aW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVJlZHVjZXIsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnCmltcG9ydCB7IFByb2plY3RTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvcHJvamVjdFNlcnZpY2UnCmltcG9ydCB7IHVzZUF1dGggfSBmcm9tICcuL0F1dGhDb250ZXh0JwoKaW50ZXJmYWNlIFByb2plY3QgewogIGlkOiBzdHJpbmcKICBuYW1lOiBzdHJpbmcKICBkZXNjcmlwdGlvbj86IHN0cmluZyB8IG51bGwKICBzdGF0dXM6IHN0cmluZwogIG93bmVyX2lkOiBzdHJpbmcKICBjcmVhdGVkX2F0OiBzdHJpbmcgfCBudWxsCiAgdXBkYXRlZF9hdDogc3RyaW5nIHwgbnVsbAogIFtrZXk6IHN0cmluZ106IGFueQp9CgppbnRlcmZhY2UgUHJvamVjdEluc2VydCB7CiAgbmFtZTogc3RyaW5nCiAgZGVzY3JpcHRpb24/OiBzdHJpbmcKICBzdGF0dXM/OiBzdHJpbmcKICBvd25lcl9pZDogc3RyaW5nCn0KCmludGVyZmFjZSBQcm9qZWN0VXBkYXRlIHsKICBuYW1lPzogc3RyaW5nCiAgZGVzY3JpcHRpb24/OiBzdHJpbmcKICBzdGF0dXM/OiBzdHJpbmcKICB1cGRhdGVkX2F0Pzogc3RyaW5nCn0KCmludGVyZmFjZSBQcm9qZWN0U3RhdGUgewogIGN1cnJlbnRQcm9qZWN0OiBQcm9qZWN0IHwgbnVsbAogIHVzZXJQcm9qZWN0czogUHJvamVjdFtdCiAgcmVjZW50UHJvamVjdHM6IFByb2plY3RbXQogIGxvYWRpbmc6IGJvb2xlYW4KICBlcnJvcjogc3RyaW5nIHwgbnVsbAp9Cgp0eXBlIFByb2plY3RBY3Rpb24gPQogIHwgeyB0eXBlOiAnU0VUX0xPQURJTkcnOyBwYXlsb2FkOiBib29sZWFuIH0KICB8IHsgdHlwZTogJ1NFVF9FUlJPUic7IHBheWxvYWQ6IHN0cmluZyB8IG51bGwgfQogIHwgeyB0eXBlOiAnU0VUX0NVUlJFTlRfUFJPSkVDVCc7IHBheWxvYWQ6IFByb2plY3QgfCBudWxsIH0KICB8IHsgdHlwZTogJ1NFVF9VU0VSX1BST0pFQ1RTJzsgcGF5bG9hZDogUHJvamVjdFtdIH0KICB8IHsgdHlwZTogJ1NFVF9SRUNFTlRfUFJPSkVDVFMnOyBwYXlsb2FkOiBQcm9qZWN0W10gfQogIHwgeyB0eXBlOiAnQUREX1BST0pFQ1QnOyBwYXlsb2FkOiBQcm9qZWN0IH0KICB8IHsgdHlwZTogJ1VQREFURV9QUk9KRUNUJzsgcGF5bG9hZDogUHJvamVjdCB9CiAgfCB7IHR5cGU6ICdSRU1PVkVfUFJPSkVDVCc7IHBheWxvYWQ6IHN0cmluZyB9CiAgfCB7IHR5cGU6ICdDTEVBUl9QUk9KRUNUUycgfQoKY29uc3QgaW5pdGlhbFN0YXRlOiBQcm9qZWN0U3RhdGUgPSB7CiAgY3VycmVudFByb2plY3Q6IG51bGwsCiAgdXNlclByb2plY3RzOiBbXSwKICByZWNlbnRQcm9qZWN0czogW10sCiAgbG9hZGluZzogZmFsc2UsCiAgZXJyb3I6IG51bGwKfQoKZnVuY3Rpb24gcHJvamVjdFJlZHVjZXIoc3RhdGU6IFByb2plY3RTdGF0ZSwgYWN0aW9uOiBQcm9qZWN0QWN0aW9uKTogUHJvamVjdFN0YXRlIHsKICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7CiAgICBjYXNlICdTRVRfTE9BRElORyc6CiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBsb2FkaW5nOiBhY3Rpb24ucGF5bG9hZCB9CiAgICBjYXNlICdTRVRfRVJST1InOgogICAgICByZXR1cm4geyAuLi5zdGF0ZSwgZXJyb3I6IGFjdGlvbi5wYXlsb2FkLCBsb2FkaW5nOiBmYWxzZSB9CiAgICBjYXNlICdTRVRfQ1VSUkVOVF9QUk9KRUNUJzoKICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGN1cnJlbnRQcm9qZWN0OiBhY3Rpb24ucGF5bG9hZCB9CiAgICBjYXNlICdTRVRfVVNFUl9QUk9KRUNUUyc6CiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCB1c2VyUHJvamVjdHM6IGFjdGlvbi5wYXlsb2FkLCBsb2FkaW5nOiBmYWxzZSB9CiAgICBjYXNlICdTRVRfUkVDRU5UX1BST0pFQ1RTJzoKICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIHJlY2VudFByb2plY3RzOiBhY3Rpb24ucGF5bG9hZCB9CiAgICBjYXNlICdBRERfUFJPSkVDVCc6CiAgICAgIHJldHVybiB7CiAgICAgICAgLi4uc3RhdGUsCiAgICAgICAgdXNlclByb2plY3RzOiBbYWN0aW9uLnBheWxvYWQsIC4uLnN0YXRlLnVzZXJQcm9qZWN0c10sCiAgICAgICAgcmVjZW50UHJvamVjdHM6IFthY3Rpb24ucGF5bG9hZCwgLi4uc3RhdGUucmVjZW50UHJvamVjdHMuc2xpY2UoMCwgNCldCiAgICAgIH0KICAgIGNhc2UgJ1VQREFURV9QUk9KRUNUJzoKICAgICAgcmV0dXJuIHsKICAgICAgICAuLi5zdGF0ZSwKICAgICAgICB1c2VyUHJvamVjdHM6IHN0YXRlLnVzZXJQcm9qZWN0cy5tYXAocHJvamVjdCA9PgogICAgICAgICAgcHJvamVjdC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWQgPyBhY3Rpb24ucGF5bG9hZCA6IHByb2plY3QKICAgICAgICApLAogICAgICAgIHJlY2VudFByb2plY3RzOiBzdGF0ZS5yZWNlbnRQcm9qZWN0cy5tYXAocHJvamVjdCA9PgogICAgICAgICAgcHJvamVjdC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWQgPyBhY3Rpb24ucGF5bG9hZCA6IHByb2plY3QKICAgICAgICApLAogICAgICAgIGN1cnJlbnRQcm9qZWN0OiBzdGF0ZS5jdXJyZW50UHJvamVjdD8uaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkID8gYWN0aW9uLnBheWxvYWQgOiBzdGF0ZS5jdXJyZW50UHJvamVjdAogICAgICB9CiAgICBjYXNlICdSRU1PVkVfUFJPSkVDVCc6CiAgICAgIHJldHVybiB7CiAgICAgICAgLi4uc3RhdGUsCiAgICAgICAgdXNlclByb2plY3RzOiBzdGF0ZS51c2VyUHJvamVjdHMuZmlsdGVyKHByb2plY3QgPT4gcHJvamVjdC5pZCAhPT0gYWN0aW9uLnBheWxvYWQpLAogICAgICAgIHJlY2VudFByb2plY3RzOiBzdGF0ZS5yZWNlbnRQcm9qZWN0cy5maWx0ZXIocHJvamVjdCA9PiBwcm9qZWN0LmlkICE9PSBhY3Rpb24ucGF5bG9hZCksCiAgICAgICAgY3VycmVudFByb2plY3Q6IHN0YXRlLmN1cnJlbnRQcm9qZWN0Py5pZCA9PT0gYWN0aW9uLnBheWxvYWQgPyBudWxsIDogc3RhdGUuY3VycmVudFByb2plY3QKICAgICAgfQogICAgY2FzZSAnQ0xFQVJfUFJPSkVDVFMnOgogICAgICByZXR1cm4gewogICAgICAgIC4uLnN0YXRlLAogICAgICAgIGN1cnJlbnRQcm9qZWN0OiBudWxsLAogICAgICAgIHVzZXJQcm9qZWN0czogW10sCiAgICAgICAgcmVjZW50UHJvamVjdHM6IFtdLAogICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgIGVycm9yOiBudWxsCiAgICAgIH0KICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBzdGF0ZQogIH0KfQoKaW50ZXJmYWNlIFByb2plY3RDb250ZXh0VHlwZSB7CiAgc3RhdGU6IFByb2plY3RTdGF0ZQogIHNlbGVjdFByb2plY3Q6IChwcm9qZWN0OiBQcm9qZWN0KSA9PiB2b2lkCiAgbG9hZFVzZXJQcm9qZWN0czogKG9wdGlvbnM/OiB7IHNpbGVudD86IGJvb2xlYW4gfSkgPT4gUHJvbWlzZTx2b2lkPgogIGxvYWRSZWNlbnRQcm9qZWN0czogKCkgPT4gUHJvbWlzZTx2b2lkPgogIGNyZWF0ZVByb2plY3Q6IChwcm9qZWN0RGF0YTogUHJvamVjdEluc2VydCkgPT4gUHJvbWlzZTxQcm9qZWN0PgogIHVwZGF0ZVByb2plY3Q6IChwcm9qZWN0SWQ6IHN0cmluZywgdXBkYXRlczogUHJvamVjdFVwZGF0ZSkgPT4gUHJvbWlzZTxQcm9qZWN0PgogIGRlbGV0ZVByb2plY3Q6IChwcm9qZWN0SWQ6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPgogIGdldEN1cnJlbnRQcm9qZWN0OiAoKSA9PiBQcm9qZWN0IHwgbnVsbAogIGNsZWFyUHJvamVjdHM6ICgpID0+IHZvaWQKfQoKY29uc3QgUHJvamVjdENvbnRleHQgPSBjcmVhdGVDb250ZXh0PFByb2plY3RDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKQoKZXhwb3J0IGZ1bmN0aW9uIFByb2plY3RQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7CiAgY29uc3QgW3N0YXRlLCBkaXNwYXRjaF0gPSB1c2VSZWR1Y2VyKHByb2plY3RSZWR1Y2VyLCBpbml0aWFsU3RhdGUpCiAgY29uc3QgeyB1c2VyLCBpc0F1dGhlbnRpY2F0ZWQgfSA9IHVzZUF1dGgoKQogIGNvbnN0IGxhc3RMb2FkZWRVc2VySWRSZWYgPSB1c2VSZWY8c3RyaW5nIHwgbnVsbD4obnVsbCkKCiAgY29uc3QgbG9hZFVzZXJQcm9qZWN0cyA9IGFzeW5jIChvcHRpb25zPzogeyBzaWxlbnQ/OiBib29sZWFuIH0pID0+IHsKICAgIGlmICghdXNlcikgcmV0dXJuCgogICAgY29uc3QgaGFzRXhpc3RpbmdQcm9qZWN0cyA9IHN0YXRlLnVzZXJQcm9qZWN0cy5sZW5ndGggPiAwCiAgICBjb25zdCBzaG91bGRTaG93TG9hZGluZyA9ICEob3B0aW9ucz8uc2lsZW50ICYmIGhhc0V4aXN0aW5nUHJvamVjdHMpCgogICAgdHJ5IHsKICAgICAgaWYgKHNob3VsZFNob3dMb2FkaW5nKSB7CiAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnU0VUX0xP
[... omitted 0 of 1 lines ...]

